     1 00000000                                 [FORMAT "WCOFF"]
     2 00000000                                 [INSTRSET "i486p"]
     3 00000000                                 [OPTIMIZE 1]
     4 00000000                                 [OPTION 1]
     5 00000000                                 [BITS 32]
     6 00000000                                 	EXTERN	_init_gdtidt
     7 00000000                                 	EXTERN	_init_pic
     8 00000000                                 	EXTERN	_io_sti
     9 00000000                                 	EXTERN	_init_palette
    10 00000000                                 	EXTERN	_init_screen8
    11 00000000                                 	EXTERN	_init_mouse_cursor8
    12 00000000                                 	EXTERN	_putblock8_8
    13 00000000                                 	EXTERN	_sprintf
    14 00000000                                 	EXTERN	_putfonts8_asc
    15 00000000                                 	EXTERN	_io_out8
    16 00000000                                 	EXTERN	_fifo8_init
    17 00000000                                 	EXTERN	_mousefifo
    18 00000000                                 	EXTERN	_io_cli
    19 00000000                                 	EXTERN	_keyfifo
    20 00000000                                 	EXTERN	_fifo8_status
    21 00000000                                 	EXTERN	_fifo8_get
    22 00000000                                 	EXTERN	_boxfill8
    23 00000000                                 	EXTERN	_io_stihlt
    24 00000000                                 	EXTERN	_io_in8
    25 00000000                                 [FILE "bootpack.c"]
    26                                          [SECTION .data]
    27 00000000                                 LC0:
    28 00000000 28 25 64 2C 20 25 64 29 00      	DB	"(%d, %d)",0x00
    29 00000009                                 LC2:
    30 00000009 5B 6C 63 72 20 25 34 64 20 25   	DB	"[lcr %4d %4d]",0x00
       00000013 34 64 5D 00 
    31 00000017                                 LC3:
    32 00000017 28 25 33 64 2C 20 25 33 64 29   	DB	"(%3d, %3d)",0x00
       00000021 00 
    33 00000022                                 LC1:
    34 00000022 25 30 32 58 00                  	DB	"%02X",0x00
    35                                          [SECTION .text]
    36 00000000                                 	GLOBAL	_HariMain
    37 00000000                                 _HariMain:
    38 00000000 55                              	PUSH	EBP
    39 00000001 89 E5                           	MOV	EBP,ESP
    40 00000003 57                              	PUSH	EDI
    41 00000004 56                              	PUSH	ESI
    42 00000005 53                              	PUSH	EBX
    43 00000006 BB 00000002                     	MOV	EBX,2
    44 0000000B 81 EC 000001F4                  	SUB	ESP,500
    45 00000011 E8 00000345                     	CALL	_init_keyboard
    46 00000016 8D 85 FFFFFE04                  	LEA	EAX,DWORD [-508+EBP]
    47 0000001C 50                              	PUSH	EAX
    48 0000001D E8 0000035A                     	CALL	_enable_mouse
    49 00000022 E8 [00000000]                   	CALL	_init_gdtidt
    50 00000027 E8 [00000000]                   	CALL	_init_pic
    51 0000002C E8 [00000000]                   	CALL	_io_sti
    52 00000031 E8 [00000000]                   	CALL	_init_palette
    53 00000036 0F BF 05 00000FF6               	MOVSX	EAX,WORD [4086]
    54 0000003D 50                              	PUSH	EAX
    55 0000003E 0F BF 05 00000FF4               	MOVSX	EAX,WORD [4084]
    56 00000045 50                              	PUSH	EAX
    57 00000046 FF 35 00000FF8                  	PUSH	DWORD [4088]
    58 0000004C E8 [00000000]                   	CALL	_init_screen8
    59 00000051 0F BF 05 00000FF4               	MOVSX	EAX,WORD [4084]
    60 00000058 8D 48 F0                        	LEA	ECX,DWORD [-16+EAX]
    61 0000005B 89 C8                           	MOV	EAX,ECX
    62 0000005D 99                              	CDQ
    63 0000005E F7 FB                           	IDIV	EBX
    64 00000060 89 C7                           	MOV	EDI,EAX
    65 00000062 0F BF 05 00000FF6               	MOVSX	EAX,WORD [4086]
    66 00000069 6A 0E                           	PUSH	14
    67 0000006B 8D 48 D4                        	LEA	ECX,DWORD [-44+EAX]
    68 0000006E 89 C8                           	MOV	EAX,ECX
    69 00000070 99                              	CDQ
    70 00000071 F7 FB                           	IDIV	EBX
    71 00000073 8D 9D FFFFFEC4                  	LEA	EBX,DWORD [-316+EBP]
    72 00000079 89 C6                           	MOV	ESI,EAX
    73 0000007B 53                              	PUSH	EBX
    74 0000007C E8 [00000000]                   	CALL	_init_mouse_cursor8
    75 00000081 6A 10                           	PUSH	16
    76 00000083 53                              	PUSH	EBX
    77 00000084 8D 5D C4                        	LEA	EBX,DWORD [-60+EBP]
    78 00000087 56                              	PUSH	ESI
    79 00000088 57                              	PUSH	EDI
    80 00000089 6A 10                           	PUSH	16
    81 0000008B 6A 10                           	PUSH	16
    82 0000008D 0F BF 05 00000FF4               	MOVSX	EAX,WORD [4084]
    83 00000094 50                              	PUSH	EAX
    84 00000095 FF 35 00000FF8                  	PUSH	DWORD [4088]
    85 0000009B E8 [00000000]                   	CALL	_putblock8_8
    86 000000A0 83 C4 38                        	ADD	ESP,56
    87 000000A3 56                              	PUSH	ESI
    88 000000A4 57                              	PUSH	EDI
    89 000000A5 68 [00000000]                   	PUSH	LC0
    90 000000AA 53                              	PUSH	EBX
    91 000000AB E8 [00000000]                   	CALL	_sprintf
    92 000000B0 53                              	PUSH	EBX
    93 000000B1 6A 07                           	PUSH	7
    94 000000B3 6A 00                           	PUSH	0
    95 000000B5 6A 00                           	PUSH	0
    96 000000B7 0F BF 05 00000FF4               	MOVSX	EAX,WORD [4084]
    97 000000BE 50                              	PUSH	EAX
    98 000000BF FF 35 00000FF8                  	PUSH	DWORD [4088]
    99 000000C5 E8 [00000000]                   	CALL	_putfonts8_asc
   100 000000CA 83 C4 28                        	ADD	ESP,40
   101 000000CD 68 000000F9                     	PUSH	249
   102 000000D2 6A 21                           	PUSH	33
   103 000000D4 E8 [00000000]                   	CALL	_io_out8
   104 000000D9 68 000000EF                     	PUSH	239
   105 000000DE 68 000000A1                     	PUSH	161
   106 000000E3 E8 [00000000]                   	CALL	_io_out8
   107 000000E8 8D 85 FFFFFEA4                  	LEA	EAX,DWORD [-348+EBP]
   108 000000EE 50                              	PUSH	EAX
   109 000000EF 6A 20                           	PUSH	32
   110 000000F1 50                              	PUSH	EAX
   111 000000F2 E8 [00000000]                   	CALL	_fifo8_init
   112 000000F7 8D 85 FFFFFE24                  	LEA	EAX,DWORD [-476+EBP]
   113 000000FD 50                              	PUSH	EAX
   114 000000FE 68 00000080                     	PUSH	128
   115 00000103 68 [00000000]                   	PUSH	_mousefifo
   116 00000108 E8 [00000000]                   	CALL	_fifo8_init
   117 0000010D 83 C4 28                        	ADD	ESP,40
   118 00000110                                 L2:
   119 00000110 E8 [00000000]                   	CALL	_io_cli
   120 00000115 68 [00000000]                   	PUSH	_keyfifo
   121 0000011A E8 [00000000]                   	CALL	_fifo8_status
   122 0000011F 5A                              	POP	EDX
   123 00000120 85 C0                           	TEST	EAX,EAX
   124 00000122 75 13                           	JNE	L5
   125 00000124 68 [00000000]                   	PUSH	_mousefifo
   126 00000129 E8 [00000000]                   	CALL	_fifo8_status
   127 0000012E 5B                              	POP	EBX
   128 0000012F 85 C0                           	TEST	EAX,EAX
   129 00000131 0F 84 00000208                  	JE	L18
   130 00000137                                 L5:
   131 00000137 68 [00000000]                   	PUSH	_keyfifo
   132 0000013C E8 [00000000]                   	CALL	_fifo8_status
   133 00000141 59                              	POP	ECX
   134 00000142 85 C0                           	TEST	EAX,EAX
   135 00000144 0F 85 00000193                  	JNE	L19
   136 0000014A 68 [00000000]                   	PUSH	_mousefifo
   137 0000014F E8 [00000000]                   	CALL	_fifo8_status
   138 00000154 5A                              	POP	EDX
   139 00000155 85 C0                           	TEST	EAX,EAX
   140 00000157 74 B7                           	JE	L2
   141 00000159 68 [00000000]                   	PUSH	_mousefifo
   142 0000015E E8 [00000000]                   	CALL	_fifo8_get
   143 00000163 89 C3                           	MOV	EBX,EAX
   144 00000165 E8 [00000000]                   	CALL	_io_sti
   145 0000016A 0F B6 C3                        	MOVZX	EAX,BL
   146 0000016D 50                              	PUSH	EAX
   147 0000016E 8D 85 FFFFFE04                  	LEA	EAX,DWORD [-508+EBP]
   148 00000174 50                              	PUSH	EAX
   149 00000175 E8 00000230                     	CALL	_mouse_decode
   150 0000017A 83 C4 0C                        	ADD	ESP,12
   151 0000017D 85 C0                           	TEST	EAX,EAX
   152 0000017F 74 8F                           	JE	L2
   153 00000181 FF B5 FFFFFE0C                  	PUSH	DWORD [-500+EBP]
   154 00000187 FF B5 FFFFFE08                  	PUSH	DWORD [-504+EBP]
   155 0000018D 68 [00000009]                   	PUSH	LC2
   156 00000192 8D 5D C4                        	LEA	EBX,DWORD [-60+EBP]
   157 00000195 53                              	PUSH	EBX
   158 00000196 E8 [00000000]                   	CALL	_sprintf
   159 0000019B 83 C4 10                        	ADD	ESP,16
   160 0000019E 8B 85 FFFFFE10                  	MOV	EAX,DWORD [-496+EBP]
   161 000001A4 A9 00000001                     	TEST	EAX,1
   162 000001A9 74 04                           	JE	L11
   163 000001AB C6 45 C5 4C                     	MOV	BYTE [-59+EBP],76
   164 000001AF                                 L11:
   165 000001AF A9 00000002                     	TEST	EAX,2
   166 000001B4 74 04                           	JE	L12
   167 000001B6 C6 45 C7 52                     	MOV	BYTE [-57+EBP],82
   168 000001BA                                 L12:
   169 000001BA 83 E0 04                        	AND	EAX,4
   170 000001BD 74 04                           	JE	L13
   171 000001BF C6 45 C6 43                     	MOV	BYTE [-58+EBP],67
   172 000001C3                                 L13:
   173 000001C3 6A 1F                           	PUSH	31
   174 000001C5 68 00000097                     	PUSH	151
   175 000001CA 6A 10                           	PUSH	16
   176 000001CC 6A 20                           	PUSH	32
   177 000001CE 6A 0E                           	PUSH	14
   178 000001D0 0F BF 05 00000FF4               	MOVSX	EAX,WORD [4084]
   179 000001D7 50                              	PUSH	EAX
   180 000001D8 FF 35 00000FF8                  	PUSH	DWORD [4088]
   181 000001DE E8 [00000000]                   	CALL	_boxfill8
   182 000001E3 53                              	PUSH	EBX
   183 000001E4 6A 07                           	PUSH	7
   184 000001E6 6A 10                           	PUSH	16
   185 000001E8 6A 20                           	PUSH	32
   186 000001EA 0F BF 05 00000FF4               	MOVSX	EAX,WORD [4084]
   187 000001F1 50                              	PUSH	EAX
   188 000001F2 FF 35 00000FF8                  	PUSH	DWORD [4088]
   189 000001F8 E8 [00000000]                   	CALL	_putfonts8_asc
   190 000001FD 8D 46 0F                        	LEA	EAX,DWORD [15+ESI]
   191 00000200 83 C4 34                        	ADD	ESP,52
   192 00000203 50                              	PUSH	EAX
   193 00000204 8D 47 0F                        	LEA	EAX,DWORD [15+EDI]
   194 00000207 50                              	PUSH	EAX
   195 00000208 56                              	PUSH	ESI
   196 00000209 57                              	PUSH	EDI
   197 0000020A 6A 0E                           	PUSH	14
   198 0000020C 0F BF 05 00000FF4               	MOVSX	EAX,WORD [4084]
   199 00000213 50                              	PUSH	EAX
   200 00000214 FF 35 00000FF8                  	PUSH	DWORD [4088]
   201 0000021A E8 [00000000]                   	CALL	_boxfill8
   202 0000021F 83 C4 1C                        	ADD	ESP,28
   203 00000222 03 B5 FFFFFE0C                  	ADD	ESI,DWORD [-500+EBP]
   204 00000228 03 BD FFFFFE08                  	ADD	EDI,DWORD [-504+EBP]
   205 0000022E 0F 88 000000A2                  	JS	L20
   206 00000234                                 L14:
   207 00000234 85 F6                           	TEST	ESI,ESI
   208 00000236 0F 88 00000093                  	JS	L21
   209 0000023C                                 L15:
   210 0000023C 0F BF 05 00000FF4               	MOVSX	EAX,WORD [4084]
   211 00000243 83 E8 10                        	SUB	EAX,16
   212 00000246 39 C7                           	CMP	EDI,EAX
   213 00000248 7E 02                           	JLE	L16
   214 0000024A 89 C7                           	MOV	EDI,EAX
   215 0000024C                                 L16:
   216 0000024C 0F BF 05 00000FF6               	MOVSX	EAX,WORD [4086]
   217 00000253 83 E8 10                        	SUB	EAX,16
   218 00000256 39 C6                           	CMP	ESI,EAX
   219 00000258 7E 02                           	JLE	L17
   220 0000025A 89 C6                           	MOV	ESI,EAX
   221 0000025C                                 L17:
   222 0000025C 56                              	PUSH	ESI
   223 0000025D 57                              	PUSH	EDI
   224 0000025E 68 [00000017]                   	PUSH	LC3
   225 00000263 53                              	PUSH	EBX
   226 00000264 E8 [00000000]                   	CALL	_sprintf
   227 00000269 8D 46 0F                        	LEA	EAX,DWORD [15+ESI]
   228 0000026C 50                              	PUSH	EAX
   229 0000026D 8D 47 0F                        	LEA	EAX,DWORD [15+EDI]
   230 00000270 50                              	PUSH	EAX
   231 00000271 6A 00                           	PUSH	0
   232 00000273 6A 00                           	PUSH	0
   233 00000275 6A 0E                           	PUSH	14
   234 00000277 0F BF 05 00000FF4               	MOVSX	EAX,WORD [4084]
   235 0000027E 50                              	PUSH	EAX
   236 0000027F FF 35 00000FF8                  	PUSH	DWORD [4088]
   237 00000285 E8 [00000000]                   	CALL	_boxfill8
   238 0000028A 83 C4 2C                        	ADD	ESP,44
   239 0000028D 53                              	PUSH	EBX
   240 0000028E 6A 07                           	PUSH	7
   241 00000290 6A 10                           	PUSH	16
   242 00000292 6A 20                           	PUSH	32
   243 00000294 0F BF 05 00000FF4               	MOVSX	EAX,WORD [4084]
   244 0000029B 50                              	PUSH	EAX
   245 0000029C FF 35 00000FF8                  	PUSH	DWORD [4088]
   246 000002A2 E8 [00000000]                   	CALL	_putfonts8_asc
   247 000002A7 8D 85 FFFFFEC4                  	LEA	EAX,DWORD [-316+EBP]
   248 000002AD 6A 10                           	PUSH	16
   249 000002AF 50                              	PUSH	EAX
   250 000002B0 56                              	PUSH	ESI
   251 000002B1 57                              	PUSH	EDI
   252 000002B2 6A 10                           	PUSH	16
   253 000002B4 6A 10                           	PUSH	16
   254 000002B6 FF 35 00000FF8                  	PUSH	DWORD [4088]
   255 000002BC FF 35 00000FF8                  	PUSH	DWORD [4088]
   256 000002C2 E8 [00000000]                   	CALL	_putblock8_8
   257 000002C7 83 C4 38                        	ADD	ESP,56
   258 000002CA E9 FFFFFE41                     	JMP	L2
   259 000002CF                                 L21:
   260 000002CF 31 F6                           	XOR	ESI,ESI
   261 000002D1 E9 FFFFFF66                     	JMP	L15
   262 000002D6                                 L20:
   263 000002D6 31 FF                           	XOR	EDI,EDI
   264 000002D8 E9 FFFFFF57                     	JMP	L14
   265 000002DD                                 L19:
   266 000002DD 68 [00000000]                   	PUSH	_keyfifo
   267 000002E2 E8 [00000000]                   	CALL	_fifo8_get
   268 000002E7 89 C3                           	MOV	EBX,EAX
   269 000002E9 E8 [00000000]                   	CALL	_io_sti
   270 000002EE 53                              	PUSH	EBX
   271 000002EF 8D 5D C4                        	LEA	EBX,DWORD [-60+EBP]
   272 000002F2 68 [00000022]                   	PUSH	LC1
   273 000002F7 53                              	PUSH	EBX
   274 000002F8 E8 [00000000]                   	CALL	_sprintf
   275 000002FD 6A 1F                           	PUSH	31
   276 000002FF 6A 0F                           	PUSH	15
   277 00000301 6A 10                           	PUSH	16
   278 00000303 6A 00                           	PUSH	0
   279 00000305 6A 0E                           	PUSH	14
   280 00000307 0F BF 05 00000FF4               	MOVSX	EAX,WORD [4084]
   281 0000030E 50                              	PUSH	EAX
   282 0000030F FF 35 00000FF8                  	PUSH	DWORD [4088]
   283 00000315 E8 [00000000]                   	CALL	_boxfill8
   284 0000031A 83 C4 2C                        	ADD	ESP,44
   285 0000031D 53                              	PUSH	EBX
   286 0000031E 6A 07                           	PUSH	7
   287 00000320 6A 10                           	PUSH	16
   288 00000322 6A 00                           	PUSH	0
   289 00000324 0F BF 05 00000FF4               	MOVSX	EAX,WORD [4084]
   290 0000032B 50                              	PUSH	EAX
   291 0000032C FF 35 00000FF8                  	PUSH	DWORD [4088]
   292 00000332 E8 [00000000]                   	CALL	_putfonts8_asc
   293 00000337 83 C4 18                        	ADD	ESP,24
   294 0000033A E9 FFFFFDD1                     	JMP	L2
   295 0000033F                                 L18:
   296 0000033F E8 [00000000]                   	CALL	_io_stihlt
   297 00000344 E9 FFFFFDC7                     	JMP	L2
   298 00000349                                 	GLOBAL	_wait_KBC_sendready
   299 00000349                                 _wait_KBC_sendready:
   300 00000349 55                              	PUSH	EBP
   301 0000034A 89 E5                           	MOV	EBP,ESP
   302 0000034C                                 L23:
   303 0000034C 6A 64                           	PUSH	100
   304 0000034E E8 [00000000]                   	CALL	_io_in8
   305 00000353 59                              	POP	ECX
   306 00000354 83 E0 02                        	AND	EAX,2
   307 00000357 75 F3                           	JNE	L23
   308 00000359 C9                              	LEAVE
   309 0000035A C3                              	RET
   310 0000035B                                 	GLOBAL	_init_keyboard
   311 0000035B                                 _init_keyboard:
   312 0000035B 55                              	PUSH	EBP
   313 0000035C 89 E5                           	MOV	EBP,ESP
   314 0000035E E8 FFFFFFE6                     	CALL	_wait_KBC_sendready
   315 00000363 6A 60                           	PUSH	96
   316 00000365 6A 64                           	PUSH	100
   317 00000367 E8 [00000000]                   	CALL	_io_out8
   318 0000036C E8 FFFFFFD8                     	CALL	_wait_KBC_sendready
   319 00000371 6A 47                           	PUSH	71
   320 00000373 6A 60                           	PUSH	96
   321 00000375 E8 [00000000]                   	CALL	_io_out8
   322 0000037A C9                              	LEAVE
   323 0000037B C3                              	RET
   324 0000037C                                 	GLOBAL	_enable_mouse
   325 0000037C                                 _enable_mouse:
   326 0000037C 55                              	PUSH	EBP
   327 0000037D 89 E5                           	MOV	EBP,ESP
   328 0000037F E8 FFFFFFC5                     	CALL	_wait_KBC_sendready
   329 00000384 68 000000D4                     	PUSH	212
   330 00000389 6A 64                           	PUSH	100
   331 0000038B E8 [00000000]                   	CALL	_io_out8
   332 00000390 E8 FFFFFFB4                     	CALL	_wait_KBC_sendready
   333 00000395 68 000000F4                     	PUSH	244
   334 0000039A 6A 60                           	PUSH	96
   335 0000039C E8 [00000000]                   	CALL	_io_out8
   336 000003A1 8B 45 08                        	MOV	EAX,DWORD [8+EBP]
   337 000003A4 C6 40 03 00                     	MOV	BYTE [3+EAX],0
   338 000003A8 C9                              	LEAVE
   339 000003A9 C3                              	RET
   340 000003AA                                 	GLOBAL	_mouse_decode
   341 000003AA                                 _mouse_decode:
   342 000003AA 55                              	PUSH	EBP
   343 000003AB 89 E5                           	MOV	EBP,ESP
   344 000003AD 56                              	PUSH	ESI
   345 000003AE 53                              	PUSH	EBX
   346 000003AF 8B 55 08                        	MOV	EDX,DWORD [8+EBP]
   347 000003B2 8B 4D 0C                        	MOV	ECX,DWORD [12+EBP]
   348 000003B5 89 CE                           	MOV	ESI,ECX
   349 000003B7 8A 42 03                        	MOV	AL,BYTE [3+EDX]
   350 000003BA 84 C0                           	TEST	AL,AL
   351 000003BC 75 11                           	JNE	L30
   352 000003BE 80 F9 FA                        	CMP	CL,-6
   353 000003C1 74 06                           	JE	L39
   354 000003C3                                 L38:
   355 000003C3 31 C0                           	XOR	EAX,EAX
   356 000003C5                                 L29:
   357 000003C5 5B                              	POP	EBX
   358 000003C6 5E                              	POP	ESI
   359 000003C7 5D                              	POP	EBP
   360 000003C8 C3                              	RET
   361 000003C9                                 L39:
   362 000003C9 C6 42 03 01                     	MOV	BYTE [3+EDX],1
   363 000003CD EB F4                           	JMP	L38
   364 000003CF                                 L30:
   365 000003CF 3C 01                           	CMP	AL,1
   366 000003D1 74 61                           	JE	L40
   367 000003D3 3C 02                           	CMP	AL,2
   368 000003D5 74 54                           	JE	L41
   369 000003D7 3C 03                           	CMP	AL,3
   370 000003D9 74 05                           	JE	L42
   371 000003DB 83 C8 FF                        	OR	EAX,-1
   372 000003DE EB E5                           	JMP	L29
   373 000003E0                                 L42:
   374 000003E0 8A 1A                           	MOV	BL,BYTE [EDX]
   375 000003E2 81 E6 000000FF                  	AND	ESI,255
   376 000003E8 89 D8                           	MOV	EAX,EBX
   377 000003EA 88 4A 02                        	MOV	BYTE [2+EDX],CL
   378 000003ED 83 E0 07                        	AND	EAX,7
   379 000003F0 89 72 08                        	MOV	DWORD [8+EDX],ESI
   380 000003F3 89 42 0C                        	MOV	DWORD [12+EDX],EAX
   381 000003F6 88 D8                           	MOV	AL,BL
   382 000003F8 0F B6 4A 01                     	MOVZX	ECX,BYTE [1+EDX]
   383 000003FC 83 E0 10                        	AND	EAX,16
   384 000003FF 89 4A 04                        	MOV	DWORD [4+EDX],ECX
   385 00000402 C6 42 03 01                     	MOV	BYTE [3+EDX],1
   386 00000406 84 C0                           	TEST	AL,AL
   387 00000408 74 09                           	JE	L36
   388 0000040A 81 C9 FFFFFF00                  	OR	ECX,-256
   389 00000410 89 4A 04                        	MOV	DWORD [4+EDX],ECX
   390 00000413                                 L36:
   391 00000413 83 E3 20                        	AND	EBX,32
   392 00000416 84 DB                           	TEST	BL,BL
   393 00000418 74 07                           	JE	L37
   394 0000041A 81 4A 08 FFFFFF00               	OR	DWORD [8+EDX],-256
   395 00000421                                 L37:
   396 00000421 F7 5A 08                        	NEG	DWORD [8+EDX]
   397 00000424 B8 00000001                     	MOV	EAX,1
   398 00000429 EB 9A                           	JMP	L29
   399 0000042B                                 L41:
   400 0000042B 88 4A 01                        	MOV	BYTE [1+EDX],CL
   401 0000042E C6 42 03 03                     	MOV	BYTE [3+EDX],3
   402 00000432 EB 8F                           	JMP	L38
   403 00000434                                 L40:
   404 00000434 83 E6 C8                        	AND	ESI,-56
   405 00000437 89 F0                           	MOV	EAX,ESI
   406 00000439 3C 08                           	CMP	AL,8
   407 0000043B 75 86                           	JNE	L38
   408 0000043D 88 0A                           	MOV	BYTE [EDX],CL
   409 0000043F C6 42 03 02                     	MOV	BYTE [3+EDX],2
   410 00000443 E9 FFFFFF7B                     	JMP	L38
